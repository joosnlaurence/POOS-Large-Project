name: Deploy POOS Large Project

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: '22.18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Deploy frontend to server
        uses: Burnett01/rsync-deployments@7.0.2
        with:
            switches: -avzr --delete
            path: frontend/dist/
            remote_path: /var/www/${{ secrets.SERVER_HOST }}/html
            remote_host: ${{ secrets.SERVER_HOST }}
            remote_port: ${{ secrets.SERVER_PORT }}
            remote_user: ${{ secrets.SERVER_USER }}
            remote_key: ${{ secrets.SERVER_SSH_KEY }}

      # Use rsync instead of scp so we can --exclude directories we shouldn't 
      # deploy. That way, we don't have to manually add any new files for our server
      - name: Deploy backend files
        uses: Burnett01/rsync-deployments@7.0.2
        with:
          # archive, verbose, compress, recursive
          # --delete is same as 'overwrite: true' for scp-action
          switches: >-
            -avzr 
            --delete  
            --exclude="node_modules/" 
            --exclude="__tests__/"
            --exclude="coverage/"
            --exclude=".env"
            --exclude="jest.config.js"
          path: backend/
          remote_path: /var/mainServer/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_port: ${{ secrets.SERVER_PORT }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Create .env file on server
        uses: appleboy/ssh-action@v1.0.0
        with: 
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /var/mainServer
            cat > .env << EOF
            MONGO_URI=${{ secrets.MONGO_URI }}
            EOF  

      - name: Install dependencies and restart server
        uses: appleboy/ssh-action@v1.0.0
        with: 
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /var/mainServer
            npm ci --production
            npm list -g pm2 || npm install -g pm2
            pm2 reload main-express-server --update-env || pm2 start index.js --name "main-express-server"
            pm2 save
            sudo nginx -s reload